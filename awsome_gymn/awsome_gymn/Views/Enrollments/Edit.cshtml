@model awsome_gymn.Models.Enrollment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/dashboard_layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enrollment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <!-- Display the User field only for Admins -->
        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, "User", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UserId, (SelectList)ViewBag.Users, "Select User", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ClassId, "Class", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, (SelectList)ViewBag.Classes, "Select Class", new { @class = "form-control", id = "ClassId" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingSessionId, "Training Session", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TrainingSessionId, (SelectList)ViewBag.TrainingSessions, "Select Training Session", new { @class = "form-control", id = "TrainingSessionId" })
                @Html.ValidationMessageFor(model => model.TrainingSessionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <script>
            // On change of class dropdown
            $('#ClassId').change(function () {
                // Get selected class id
                var classId = $(this).val();
                // Ajax request to get sessions
                $.ajax({
                    url: '@Url.Action("GetTrainingSessions", "Enrollments")',
                    type: 'POST',
                    data: { classId: classId },
                    success: function (data) {
                        // Clear existing options
                        $('#TrainingSessionId').empty().append($('<option>', {
                            value: '',
                            text: 'Select Training Session'
                        }));
                        // Add new options from data
                        $.each(data, function (i, item) {
                            // Create option with session info
                            var option = $('<option>', {
                                value: item.Id,
                                text: item.Time
                            });
                            // Add option to dropdown
                            $('#TrainingSessionId').append(option);
                        });
                    },
                    error: function () {
                        alert('Error loading sessions');
                    }
                });
            });
        </script>

        <!-- EnrollmentDate field as a read-only text box -->
        <div class="form-group">
            @Html.LabelFor(model => model.EnrollmentDate, "Enrollment Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EnrollmentDate, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
